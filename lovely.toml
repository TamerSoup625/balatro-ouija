[manifest]
version = "1.0.0"
dump_lua = true
priority = 1


# Four Fingers for flushes
[[patches]]
[patches.pattern]
target = "functions/misc_functions.lua"
pattern = "local four_fingers = next(find_joker('Four Fingers'))"
position = "at"
payload = '''
local min_size = 5
for _, value in pairs(SMODS.find_card("j_four_fingers")) do
    if value.ability.extra < min_size then
        min_size = value.ability.extra
    end
end
'''
match_indent = true

# Turns out pattern cannot change content inside a line
[[patches]]
[patches.pattern]
target = "functions/misc_functions.lua"
pattern = "if #hand < (5 - (four_fingers and 1 or 0)) then return ret else"
position = "at"
payload = '''
if #hand < min_size then return ret else
'''
match_indent = true
times = 2

[[patches]]
[patches.pattern]
target = "functions/misc_functions.lua"
pattern = "if flush_count >= (5 - (four_fingers and 1 or 0)) then"
position = "at"
payload = '''
if flush_count >= min_size then
'''
match_indent = true


# Credit Card interest bonus
# There's also Cryptid payload, so this is be the best way I can think of
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "if G.GAME.dollars >= 5 and not G.GAME.modifiers.no_interest and G.GAME.cry_payload then"
position = "before"
payload = '''
-- Add dollars
G.GAME.ouija_interest_start = G.GAME.ouija_interest_start or 0
G.GAME.dollars = G.GAME.dollars - G.GAME.ouija_interest_start
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "add_round_eval_row({name = 'bottom', dollars = dollars})"
position = "before"
payload = '''
-- Sub dollars
G.GAME.dollars = G.GAME.dollars + G.GAME.ouija_interest_start
'''
match_indent = true